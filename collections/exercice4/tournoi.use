--
-- Copyright 2016 Alexandre Terrasa <alexandre@moz-code.org>.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.
--

model Tournoi

-- classes

class Equipe
	attributes
		nom: String
		pro: Boolean
end

class Joueur
	attributes
		nom: String
		age: Integer
end

class Match
	attributes
		victoire: Boolean
end

class Tournoi
	attributes
		date: String
		pro: Boolean
end

-- associations

association EquipeJoueur between
	Equipe [1] role equipe
	Joueur [*] role joueurs
end

association EquipeMatch between
	Equipe [1] role equipe
	Equipe [1] role affronte
	Match [*] role matchs
end

association TournoiEquipe between
	Tournoi [*] role tournois
	Equipe [*] role equipes
end

association TournoiMatch between
	Tournoi [1] role tournoi
	Match [*] role matchs
end

-- contraintes

constraints

context Equipe

	-- Deux joueurs d’une même équipe ne peuvent avoir le même nom
	inv inv1: joueurs->forAll(j1, j2 | j1 <> j2 implies j1.nom <> j2.nom)

context Tournoi

	-- Deux joueurs dans un même tournoi ne peuvent avoir le même nom
	inv inv2: 
		let joueurs = equipes.collect(joueurs)
		in joueurs->forAll(j1, j2 | j1 <> j2 implies j1.nom <> j2.nom)
